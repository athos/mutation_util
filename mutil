#! /usr/bin/env python

from mutil.run import *
import argparse

#
# top level parser
#
parser = argparse.ArgumentParser(prog = "mutil")
parser.add_argument("--version", action = "version", version = "MutationUtil-0.2.0")
subparsers = parser.add_subparsers()

####################
# compare
parse_parser = subparsers.add_parser("comparison")
parse_parser.add_argument( '-i', '--input', help = 'mutation list', type = str, default = None, required = True )
parse_parser.add_argument( '-d', '--database', help = 'fairhose maf', type = str, default = None, required = True )
parse_parser.add_argument( '-o', '--output', help = 'output directory', type = str, default = None, required = True)
parse_parser.add_argument( '-m', '--mapchain', help = 'map chain file', type = str, default = None)
parse_parser.add_argument( '-e', '--eb_pval', help = 'EBCall P-value', type = float, default = 0.0)
parse_parser.add_argument( '-f', '--fish_pval', help = 'Fisher test P-value', type = float, default = 0.0)
parse_parser.add_argument( '-r', '--realign_pval', help = 'Realignment Fisher test P-value', type = float, default = 0.0)
parse_parser.add_argument( '-t', '--tcount', help = 'read count of tumor', type = int, default = -1)
parse_parser.add_argument( '-n', '--ncount', help = 'read count of normal', type = int, default = -1)
parse_parser.add_argument( '-g', '--func_ref', help = 'select [downstream,exonic,intergenic,intronic,ncRNA_exonic,ncRNA_intronic,splicing,upstream,upstream;downstream,UTR3,UTR5]', type = str, default = "downstream,exonic,intergenic,intronic,ncRNA_exonic,ncRNA_intronic,splicing,upstream,upstream;downstream,UTR3,UTR5")
parse_parser.add_argument( '-1', '--gene_ref', help = 'select gene name', type = str, default = "")

parse_parser.set_defaults(func = run_compare)

####################
# filter
parse_parser = subparsers.add_parser("filter")
parse_parser.add_argument( '-i', '--input', help = 'mutation list', type = str, default = None, required = True )
parse_parser.add_argument( '-o', '--output', help = 'output directory', type = str, default = None, required = True)
parse_parser.add_argument( '-e', '--eb_pval', help = 'EBCall P-value', type = float, default = 0.0)
parse_parser.add_argument( '-f', '--fish_pval', help = 'Fisher test P-value', type = float, default = 0.0)
parse_parser.add_argument( '-r', '--realign_pval', help = 'Realignment Fisher test P-value', type = float, default = 0.0)
parse_parser.add_argument( '-t', '--tcount', help = 'read count of tumor', type = int, default = -1)
parse_parser.add_argument( '-n', '--ncount', help = 'read count of normal', type = int, default = 1000000)
parse_parser.add_argument( '-p', '--post10q', help = '10% posterior quantile', type = float, default = 0.0)
parse_parser.add_argument( '-q', '--r_post10q', help = 'Realignment 10% posterior quantile', type = float, default = 0.0)
parse_parser.add_argument( '-c', '--count', help = 'read count', type = int, default = -1)

parse_parser.set_defaults(func = run_filter)

args = parser.parse_args()
args.func(args)

